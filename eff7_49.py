#!/usr/bin/env python
# -*- coding:utf-8 -*-
#
#    Author :  Daydup
#    E-mail :  hainuzsr@gmail.com
#    Date   :  170106 10:17:07
##################################
#7-49 为每个函数、类和模块编写文档字符串
##################################
#由于Python是一门动态语言，所以文档显得极其重要。Python对文档提供了内置的支持，使得开发者可以把文档与代码块关联起来。与其他许多编程语言不同，Python程序在运行的时候，能够直接访问源代码中的文档信息。

#例如，在为函数编写了def语句之后，我们可以紧接着提供docstring,以便将一段开发文档与该函数关联起来：

def palindrome(word):
    """Return True if the given word is a palindrome."""
    return word == word[::-1]

#在Python程序中，我们可以通过名为__doc__的特殊属性，来访问该函数的文档。

print(repr(palindrome.__doc__))

#函数、类和模块，都可以与文档字符串相关联。系统会在编译和运行Python程序的过程中，维护这种联系。因为Python代码支持文档字符串和__doc__属性，所以产生了下面三个好处：

#1.由于能够访问代码中的文档，所以交互式开发变得更加方便了。

#2.这种标准的文档定义方式，使得开发者很容易就能构建出一些工具，把纯文本转换成HTML等更友好的格式。

#3.由于Python将文档视为第一等级的(first-class)对象，而且可以令开发者在程序中访问格式良好的文档信息，所以我们很乐意编写更多的文档。Python社区的开发者都坚信：文档非常重要。代码必须要有完备的文档，才能称得上是好代码。

